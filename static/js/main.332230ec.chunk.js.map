{"version":3,"sources":["Components/Algorithms/mergeSort.js","Components/Algorithms/heapSort.js","Components/Algorithms/quickSort.js","Components/SortingVisualiser/SortingVisualiser.jsx","Components/Algorithms/bubbleSort.js","Components/Algorithms/selectionSort.js","App.js","index.js"],"names":["getMergeSortAnimations","array","animations","dummyArray","slice","mergeSort","auxillaryArray","startIndex","endIndex","middleIndex","Math","floor","sortArray","i","j","push","merge","length","getHeapSortAnimations","stateArray","animate","secondaryArray","n","parseInt","heapify","temp","doHeapSort","largest","l","r","getQuickSortAnimations","doQuickSort","primaryArray","lowIndex","highIndex","part","pivotIndex","partition","PRIMARY","SECONDARY","generateRandomArray","min","max","random","SortingVisualiser","props","state","NUMBER_OF_BARS","SPEED_MS","isRunning","changeSize","bind","changeSpeed","disableButtons","activateButtons","this","resetArray","setState","e","value","target","newSpeed","barsOfArray","document","getElementsByClassName","k","setTimeout","style","backgroundColor","isAtTarget","action","barOneIndex","barTwoIndex","color","barOneStyle","barTwoStyle","newHeight","height","COMPLETE_TIME","finishedSorting","TOTAL_ALGORITHM_TIME","newHeightBarOne","newHeightBarTwo","bubbleSortHelper","getBubbleSortAnimations","doSelectionSort","getSelectionSortAnimations","className","map","id","key","width","disabled","onClick","bubbleSort","selectionSort","heapSort","quickSort","type","onChange","Component","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.332230ec.chunk.js","sourcesContent":["export function getMergeSortAnimations(array) {\r\n    let animations  = [];\r\n    let dummyArray = array.slice();\r\n    mergeSort(dummyArray, 0, dummyArray.length - 1, animations);\r\n    return animations;\r\n}\r\n\r\n\r\nfunction mergeSort(auxillaryArray, startIndex, endIndex, animations) {\r\n    if(startIndex === endIndex)\r\n        return;\r\n    const middleIndex = Math.floor((startIndex + endIndex)/2);\r\n    mergeSort(auxillaryArray, startIndex, middleIndex, animations);\r\n    mergeSort(auxillaryArray, middleIndex + 1, endIndex, animations);\r\n    merge(auxillaryArray, startIndex, middleIndex, endIndex, animations);\r\n}\r\n\r\nfunction merge(auxillaryArray, startIndex, middleIndex, endIndex, animations) {\r\n    let sortArray = [];\r\n    let i = startIndex;\r\n    let j = middleIndex + 1;\r\n    while(i <= middleIndex && j <= endIndex) {\r\n        animations.push([\"select\", i, j]);\r\n        animations.push([\"deselect\", i, j]);\r\n        if(auxillaryArray[i] <= auxillaryArray[j]) {\r\n            sortArray.push(auxillaryArray[i++]);\r\n        }\r\n        else {\r\n            sortArray.push(auxillaryArray[j++]);\r\n        }\r\n    }\r\n    while(i <= middleIndex) {\r\n        animations.push([\"select\", i, i]);\r\n        animations.push([\"deselect\", i, i]);\r\n        sortArray.push(auxillaryArray[i++]);\r\n    }\r\n    while(j <= endIndex) {\r\n        animations.push([\"select\", j, j]);\r\n        animations.push([\"deselect\", j, j]);\r\n        sortArray.push(auxillaryArray[j++]);\r\n    }\r\n    for (let i = startIndex; i <= endIndex; i++) {\r\n        animations.push([\"select\", i, i - startIndex]);\r\n        animations.push([\"swap\", i, sortArray[i - startIndex]]);\r\n        animations.push([\"deselect\", i, i - startIndex]);\r\n        auxillaryArray[i] = sortArray[i - startIndex];\r\n    }\r\n}\r\n\r\n","export function getHeapSortAnimations(stateArray) {\r\n    if (stateArray.length <= 1) return stateArray\r\n    let animate = []\r\n    let dummyArray = stateArray.slice()\r\n    doHeapSort(dummyArray, animate)\r\n    return animate\r\n}\r\n\r\n\r\nfunction doHeapSort(secondaryArray, animate) {\r\n    let n = secondaryArray.length\r\n    for(var i = parseInt(n/2); i >= 0; i--){\r\n        heapify(secondaryArray, n, i, animate)\r\n    }\r\n\r\n    for(var j = n-1; j > 0; j--){\r\n        animate.push(['select', 0, j])\r\n        animate.push(['swap', j, secondaryArray[0], 0, secondaryArray[j]])\r\n        animate.push(['deselect', 0, j])\r\n        let temp = secondaryArray[0]\r\n        secondaryArray[0] = secondaryArray[j]\r\n        secondaryArray[j] = temp\r\n\r\n        heapify(secondaryArray, j, 0, animate)\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction heapify(secondaryArray, n, i, animate){\r\n    var largest = i\r\n    var l = 2 * i + 1\r\n    var r = 2 * i + 2\r\n\r\n    if((l < n) && (secondaryArray[largest] < secondaryArray[l])){\r\n        largest = l\r\n    }\r\n    if((r < n) && (secondaryArray[largest] < secondaryArray[r])){\r\n        largest = r\r\n    }\r\n    \r\n    if(largest !== i){\r\n        animate.push(['select', largest, i])\r\n        animate.push(['swap', largest, secondaryArray[i], i, secondaryArray[largest]])\r\n        animate.push(['deselect', largest, i])\r\n        let temp = secondaryArray[i]\r\n        secondaryArray[i] = secondaryArray[largest]\r\n        secondaryArray[largest] = temp\r\n\r\n        heapify(secondaryArray, n, largest, animate)\r\n    } \r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","export function getQuickSortAnimations(stateArray) {\r\n    if(stateArray.length <= 1) return stateArray\r\n    const dummyArray = stateArray.slice()\r\n    const animate = []\r\n    doQuickSort(stateArray, dummyArray, 0, stateArray.length-1, animate)\r\n    return animate\r\n}\r\n\r\n\r\nfunction doQuickSort(primaryArray, secondaryArray, lowIndex, highIndex, animate) {\r\n    if(lowIndex < highIndex){\r\n        var part = partition(secondaryArray, lowIndex, highIndex, animate)\r\n\r\n        doQuickSort(primaryArray, secondaryArray, lowIndex, part-1, animate)\r\n        doQuickSort(primaryArray, secondaryArray, part+1, highIndex, animate)\r\n    }\r\n}\r\n\r\n\r\nfunction partition(secondaryArray, lowIndex, highIndex, animate) {\r\n    var i = lowIndex - 1\r\n    let pivotIndex = highIndex\r\n\r\n    for(let j = lowIndex; j < highIndex; ++j) {\r\n        animate.push(['select', i+1, highIndex])\r\n        animate.push(['deselect', i+1, highIndex])\r\n        if(secondaryArray[j] <= secondaryArray[pivotIndex]){\r\n            \r\n            i++\r\n\r\n            animate.push(['select', i, j])\r\n            animate.push(['swap', i, secondaryArray[j], j, secondaryArray[i]])\r\n            animate.push(['deselect', i, j])\r\n            let temp = secondaryArray[j]\r\n            secondaryArray[j] = secondaryArray[i]\r\n            secondaryArray[i] = temp\r\n\r\n        }\r\n    }\r\n\r\n    animate.push(['select', highIndex, i+1])\r\n    animate.push(['swap', pivotIndex, secondaryArray[i+1], i+1, secondaryArray[pivotIndex]])\r\n    animate.push(['deselect', highIndex, i+1])\r\n\r\n    let temp = secondaryArray[pivotIndex]\r\n    secondaryArray[pivotIndex] = secondaryArray[i+1]\r\n    secondaryArray[i+1] = temp\r\n\r\n    return i+1\r\n}","import React, {Component} from 'react';\r\nimport'./SortingVisualiser.css';\r\nimport { getMergeSortAnimations } from '../Algorithms/mergeSort.js'\r\nimport { getHeapSortAnimations } from '../Algorithms/heapSort.js'\r\nimport { getQuickSortAnimations } from '../Algorithms/quickSort.js'\r\nimport { getBubbleSortAnimations } from '../Algorithms/bubbleSort.js'\r\nimport { getSelectionSortAnimations } from '../Algorithms/selectionSort.js'\r\n\r\n\r\n\r\nconst PRIMARY = 'turquoise'\r\nconst SECONDARY = 'rgb(255, 0, 0)' \r\nconst COMPLETED = 'rgba(78, 216, 96, 1)'\r\nconst SPEED_MS = 3\r\nconst NUMBER_OF_BARS = 240\r\n\r\nclass SortingVisualiser extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            array : [],\r\n            NUMBER_OF_BARS,\r\n            SPEED_MS,\r\n            isRunning: false\r\n        }\r\n        this.changeSize = this.changeSize.bind(this)\r\n        this.changeSpeed = this.changeSpeed.bind(this)\r\n        this.disableButtons = this.disableButtons.bind(this)\r\n        this.activateButtons = this.activateButtons.bind(this)\r\n    } \r\n\r\n    componentDidMount(){\r\n        this.resetArray()\r\n    }\r\n\r\n    resetArray(){\r\n        const array = []\r\n        for(let i=0; i<this.state.NUMBER_OF_BARS; i++){\r\n            array.push(generateRandomArray(5,600))\r\n        }\r\n        this.setState({array})\r\n        \r\n    }\r\n\r\n\r\n\r\n    changeSize(e) {\r\n\r\n        let value = e.target.value\r\n        this.setState({NUMBER_OF_BARS: value})\r\n\r\n        const array = []\r\n        for(let i=0; i<this.state.NUMBER_OF_BARS; i++){\r\n            array.push(generateRandomArray(5,600))\r\n        }\r\n        this.setState({array})\r\n\r\n    }\r\n\r\n    changeSpeed(e){\r\n        let value = e.target.value\r\n        let newSpeed = 300/(value*value)\r\n        this.setState({SPEED_MS: newSpeed})\r\n    }\r\n\r\n\r\n\r\n    disableButtons() {\r\n        this.setState({isRunning: true})\r\n    }\r\n\r\n\r\n\r\n    activateButtons() {\r\n        this.setState({isRunning: false})\r\n    }\r\n\r\n\r\n    finishedSorting() {\r\n        const barsOfArray = document.getElementsByClassName('array-bar')\r\n        for(let k = 0; k<this.state.array.length;k++){\r\n            setTimeout(() => {\r\n                barsOfArray[k].style.backgroundColor = COMPLETED\r\n            }, this.state.SPEED_MS)\r\n        }\r\n    }\r\n     \r\n\r\n\r\n\r\n    mergeSort() {\r\n        this.disableButtons();\r\n        const animations = getMergeSortAnimations(this.state.array);\r\n        for (let i = 0; i < animations.length; i++) {\r\n            const isAtTarget = animations[i][0] === \"select\" || animations[i][0] === \"deselect\";\r\n            const barsOfArray = document.getElementsByClassName('array-bar');\r\n            if(isAtTarget) {\r\n                const [action, barOneIndex, barTwoIndex] = animations[i];\r\n                if((action !== 'select') && (action !== 'deselect')) return\r\n                const color = (animations[i][0] === \"select\") ? SECONDARY : PRIMARY;\r\n                const barOneStyle = barsOfArray[barOneIndex].style;\r\n                const barTwoStyle = barsOfArray[barTwoIndex].style;\r\n                setTimeout(() => {\r\n                    barOneStyle.backgroundColor = color;\r\n                    barTwoStyle.backgroundColor = color;\r\n                },i * this.state.SPEED_MS);\r\n                \r\n            }\r\n            else {\r\n                setTimeout(() => {\r\n                    const [action, barOneIndex, newHeight] = animations[i];\r\n                    if(action !== 'swap') return\r\n                    const barOneStyle = barsOfArray[barOneIndex].style;\r\n                    barOneStyle.height = `${newHeight}px`;\r\n                  },i * this.state.SPEED_MS);\r\n            }\r\n        }\r\n        const COMPLETE_TIME = parseInt(this.state.SPEED_MS*animations.length + 100)\r\n        setTimeout(() => this.finishedSorting(), COMPLETE_TIME)\r\n        for(let k = 0; k<this.state.array.length;k++){\r\n            const barsOfArray = document.getElementsByClassName('array-bar')\r\n            setTimeout(() => {\r\n                barsOfArray[k].style.backgroundColor = PRIMARY\r\n            },COMPLETE_TIME + this.state.SPEED_MS + 1500)\r\n        }\r\n        const TOTAL_ALGORITHM_TIME = COMPLETE_TIME + this.state.SPEED_MS + 1500\r\n        setTimeout(() => this.activateButtons(), TOTAL_ALGORITHM_TIME)\r\n    }\r\n\r\n\r\n\r\n\r\n    \r\n\r\n    heapSort(){\r\n        this.disableButtons()\r\n        const animations = getHeapSortAnimations(this.state.array)\r\n        const barsOfArray = document.getElementsByClassName('array-bar')\r\n        for(let i = 0; i < animations.length; i++){\r\n            const isAtTarget = (animations[i][0] === 'select') || (animations[i][0] === 'deselect')\r\n            if(isAtTarget){\r\n                const [action, barOneIndex, barTwoIndex] = animations[i]\r\n                if((action !== 'select') && (action !== 'deselect')) return\r\n                const barOneStyle = barsOfArray[barOneIndex].style\r\n                const barTwoStyle = barsOfArray[barTwoIndex].style\r\n                const color = animations[i][0] === 'deselect' ? PRIMARY : SECONDARY\r\n                setTimeout(() => {\r\n                    barOneStyle.backgroundColor = color\r\n                    barTwoStyle.backgroundColor = color\r\n                }, i * this.state.SPEED_MS)\r\n            }else{\r\n                setTimeout(() => {\r\n                    const [action, barOneIndex, newHeightBarOne, barTwoIndex, newHeightBarTwo] = animations[i]\r\n                    if(action !== 'swap') return\r\n                    const barOneStyle = barsOfArray[barOneIndex].style\r\n                    const barTwoStyle = barsOfArray[barTwoIndex].style\r\n                    barOneStyle.height = `${newHeightBarOne}px`\r\n                    barTwoStyle.height = `${newHeightBarTwo}px`\r\n                }, i * this.state.SPEED_MS)\r\n            }\r\n        }\r\n        const COMPLETE_TIME = parseInt(this.state.SPEED_MS*animations.length + 100)\r\n        setTimeout(() => this.finishedSorting(), COMPLETE_TIME)\r\n        for(let k = 0; k<this.state.array.length;k++){\r\n            setTimeout(() => {\r\n                barsOfArray[k].style.backgroundColor = PRIMARY\r\n            },COMPLETE_TIME+ this.state.SPEED_MS + 1500)\r\n        }\r\n        const TOTAL_ALGORITHM_TIME = COMPLETE_TIME + this.state.SPEED_MS + 1500\r\n        setTimeout(() => this.activateButtons(), TOTAL_ALGORITHM_TIME)  \r\n    }\r\n\r\n\r\n\r\n    quickSort(){\r\n        this.disableButtons()\r\n        const animations = getQuickSortAnimations(this.state.array)\r\n        const barsOfArray = document.getElementsByClassName('array-bar')\r\n        for(let i = 0; i < animations.length; i++){\r\n            const isAtTarget = (animations[i][0] === 'select') || (animations[i][0] === 'deselect')\r\n            if(isAtTarget){\r\n                const [action, barOneIndex, barTwoIndex] = animations[i]\r\n                if((action !== 'select') && (action !== 'deselect')) return\r\n                const barOneStyle = barsOfArray[barOneIndex].style\r\n                const barTwoStyle = barsOfArray[barTwoIndex].style\r\n                const color = animations[i][0] === 'deselect' ? PRIMARY : SECONDARY\r\n                setTimeout(() => {\r\n                    barOneStyle.backgroundColor = color\r\n                    barTwoStyle.backgroundColor = color\r\n                }, i * this.state.SPEED_MS)\r\n            }else{\r\n                setTimeout(() => {\r\n                    const [action, barOneIndex, newHeightBarOne, barTwoIndex, newHeightBarTwo] = animations[i]\r\n                    if(action !== 'swap') return\r\n                    const barOneStyle = barsOfArray[barOneIndex].style\r\n                    const barTwoStyle = barsOfArray[barTwoIndex].style\r\n                    barOneStyle.height = `${newHeightBarOne}px`\r\n                    barTwoStyle.height = `${newHeightBarTwo}px`\r\n                }, i * this.state.SPEED_MS)\r\n            }\r\n        }\r\n        const COMPLETE_TIME = parseInt(this.state.SPEED_MS*animations.length + 100)\r\n        setTimeout(() => this.finishedSorting(), COMPLETE_TIME)\r\n        for(let k = 0; k<this.state.array.length;k++){\r\n            setTimeout(() => {\r\n                barsOfArray[k].style.backgroundColor = PRIMARY\r\n            },COMPLETE_TIME+ this.state.SPEED_MS + 1500)\r\n        }\r\n        const TOTAL_ALGORITHM_TIME = COMPLETE_TIME + this.state.SPEED_MS + 1500\r\n        setTimeout(() => this.activateButtons(), TOTAL_ALGORITHM_TIME)  \r\n    }\r\n\r\n\r\n\r\n\r\n    bubbleSort(){\r\n        this.disableButtons()\r\n        const animations = getBubbleSortAnimations(this.state.array)\r\n        const barsOfArray = document.getElementsByClassName('array-bar')\r\n        for(let i = 0; i < animations.length; i++){\r\n            const isAtTarget = (animations[i][0] === 'select') || (animations[i][0] === 'deselect')\r\n            if(isAtTarget){\r\n                const [action, barOneIndex, barTwoIndex] = animations[i]\r\n                if((action !== 'select') && (action !== 'deselect')) return\r\n                const barOneStyle = barsOfArray[barOneIndex].style\r\n                const barTwoStyle = barsOfArray[barTwoIndex].style\r\n                const color = animations[i][0] === 'deselect' ? PRIMARY : SECONDARY\r\n                setTimeout(() => {\r\n                    barOneStyle.backgroundColor = color\r\n                    barTwoStyle.backgroundColor = color\r\n                }, i * this.state.SPEED_MS)\r\n            } else {\r\n                setTimeout(() => {\r\n                    const [action, barOneIndex, newHeightBarOne, barTwoIndex, newHeightBarTwo] = animations[i]\r\n                    if(action !== 'swap') return\r\n                    const barOneStyle = barsOfArray[barOneIndex].style\r\n                    const barTwoStyle = barsOfArray[barTwoIndex].style\r\n                    barOneStyle.height = `${newHeightBarOne}px`\r\n                    barTwoStyle.height = `${newHeightBarTwo}px`\r\n                }, i * this.state.SPEED_MS)\r\n            }\r\n        }\r\n        const COMPLETE_TIME = parseInt(this.state.SPEED_MS*animations.length + 100)\r\n        setTimeout(() => this.finishedSorting(), COMPLETE_TIME)\r\n        for(let k = 0; k<this.state.array.length;k++){\r\n            setTimeout(() => {\r\n                barsOfArray[k].style.backgroundColor = PRIMARY\r\n            },COMPLETE_TIME + this.state.SPEED_MS + 1500)\r\n        } \r\n        const TOTAL_ALGORITHM_TIME = COMPLETE_TIME + this.state.SPEED_MS + 1500\r\n        setTimeout(() => this.activateButtons(), TOTAL_ALGORITHM_TIME) \r\n    }\r\n\r\n\r\n\r\n    selectionSort(){\r\n        this.disableButtons()\r\n        const animations = getSelectionSortAnimations(this.state.array)\r\n        const barsOfArray = document.getElementsByClassName('array-bar')\r\n        for(let i = 0; i < animations.length; i++){\r\n            const isAtTarget = (animations[i][0] === 'select') || (animations[i][0] === 'deselect')\r\n            if(isAtTarget){\r\n                const [action, barOneIndex, barTwoIndex] = animations[i]\r\n                if((action !== 'select') && (action !== 'deselect')) return\r\n                const barOneStyle = barsOfArray[barOneIndex].style\r\n                const barTwoStyle = barsOfArray[barTwoIndex].style\r\n                const color = animations[i][0] === 'deselect' ? PRIMARY : SECONDARY\r\n                setTimeout(() => {\r\n                    barOneStyle.backgroundColor = color\r\n                    barTwoStyle.backgroundColor = color\r\n                }, i * this.state.SPEED_MS)\r\n            } else {\r\n                setTimeout(() => {\r\n                    const [action, barOneIndex, newHeightBarOne, barTwoIndex, newHeightBarTwo] = animations[i]\r\n                    if(action !== 'swap') return\r\n                    const barOneStyle = barsOfArray[barOneIndex].style\r\n                    const barTwoStyle = barsOfArray[barTwoIndex].style\r\n                    barOneStyle.height = `${newHeightBarOne}px`\r\n                    barTwoStyle.height = `${newHeightBarTwo}px`\r\n                }, i * this.state.SPEED_MS)\r\n            }\r\n        }\r\n        const COMPLETE_TIME = parseInt(this.state.SPEED_MS*animations.length + 100)\r\n        setTimeout(() => this.finishedSorting(), COMPLETE_TIME)\r\n        for(let k = 0; k<this.state.array.length;k++){\r\n            setTimeout(() => {\r\n                barsOfArray[k].style.backgroundColor = PRIMARY\r\n            },COMPLETE_TIME + this.state.SPEED_MS + 1500)\r\n        } \r\n        const TOTAL_ALGORITHM_TIME = COMPLETE_TIME + this.state.SPEED_MS + 1500\r\n        setTimeout(() => this.activateButtons(), TOTAL_ALGORITHM_TIME) \r\n    }\r\n\r\n    \r\n\r\n\r\n    render(){\r\n        const {array} = this.state\r\n        return(\r\n            <div>\r\n            <div className = \"array-container\">\r\n                {array.map((value, id) => (\r\n                    <div \r\n                    className = \"array-bar\"\r\n                    key = {id}\r\n                    style = {{\r\n                        backgroundColor:PRIMARY,\r\n                        height: `${value}px`,\r\n                        width: `${parseInt(720/this.state.NUMBER_OF_BARS)}px`\r\n                    }}>\r\n                    </div>\r\n                ))}\r\n                </div>\r\n                <div className = \"bottom-bar\">\r\n                <button className={this.state.isRunning ? 'disabled-button' : 'reset-button'} disabled={this.state.isRunning} onClick={() => this.resetArray()}>Reset Array</button>\r\n                <button className={this.state.isRunning ? 'disabled-button': 'algo-button'} disabled={this.state.isRunning} onClick={() => this.bubbleSort()}>Bubble Sort</button>\r\n                <button className={this.state.isRunning ? 'disabled-button': 'algo-button'} disabled={this.state.isRunning} onClick={() => this.selectionSort()}>Selection Sort</button>\r\n                <button className={this.state.isRunning ? 'disabled-button': 'algo-button'} disabled={this.state.isRunning} onClick={() => this.mergeSort()}>Merge Sort</button>\r\n                <button className={this.state.isRunning ? 'disabled-button': 'algo-button'} disabled={this.state.isRunning} onClick={() => this.heapSort()}>Heap Sort</button>\r\n                <button className={this.state.isRunning ? 'disabled-button': 'algo-button'} disabled={this.state.isRunning} onClick={() => this.quickSort()}>Quick Sort</button>\r\n                <label>Size: <input disabled={this.state.isRunning} type=\"range\" min=\"10\" max=\"240\" value={this.state.NUMBER_OF_BARS} onChange={this.changeSize} ></input></label>\r\n                <label>Speed: <input disabled={this.state.isRunning} type=\"range\" min =\"1\" max=\"15\" onChange={this.changeSpeed}></input></label>\r\n                </div>\r\n                </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nfunction generateRandomArray (min, max) {\r\n    return Math.floor(Math.random()*(max-min+1)+(min))\r\n}\r\n\r\nexport default SortingVisualiser\r\n\r\n\r\n\r\n","export function getBubbleSortAnimations(stateArray) {\r\n    if(stateArray.length <= 1) return stateArray\r\n    const animate = []\r\n    const dummyArray = stateArray.slice()\r\n    bubbleSortHelper(stateArray, 0, dummyArray, animate)\r\n    return animate\r\n\r\n}\r\n\r\nfunction bubbleSortHelper(primaryArray, startIndex, secondaryArray, animate) {\r\n    let k = startIndex\r\n    for(;k<secondaryArray.length;k++){\r\n        let i = startIndex\r\n        let j = i + 1\r\n        for(;j<secondaryArray.length-k;i++,j++) {\r\n            animate.push(['select', i, j])\r\n            if(secondaryArray[i] > secondaryArray[j]){\r\n                animate.push(['swap', i, secondaryArray[j], j, secondaryArray[i]])\r\n                animate.push(['deselect', i, j])\r\n                let temp = secondaryArray[i]\r\n                secondaryArray[i] = secondaryArray[j]\r\n                secondaryArray[j] = temp\r\n            }else{\r\n                animate.push(['swap', i, secondaryArray[i], j, secondaryArray[j]])\r\n                animate.push(['deselect', i, j])\r\n            }\r\n        }\r\n    }\r\n}\r\n","export function getSelectionSortAnimations(stateArray) {\r\n    if(stateArray.length <= 1) return stateArray\r\n    const dummyArray = stateArray.slice()\r\n    const animate = []\r\n    doSelectionSort(stateArray, dummyArray, animate)\r\n    return animate\r\n}\r\n\r\nfunction doSelectionSort(primaryArray, secondaryArray, animate) {\r\n    for(let i = 0; i < secondaryArray.length-1 ; i++){\r\n        let min = i\r\n        for(let j = i+1; j<secondaryArray.length; j++){\r\n            animate.push(['select',j,min])\r\n            animate.push(['deselect',j,min])\r\n            if(secondaryArray[j] < secondaryArray[min]){\r\n                min = j\r\n            }\r\n        }\r\n        animate.push(['select', min, i])\r\n        animate.push(['swap', min, secondaryArray[i], i, secondaryArray[min]])\r\n        animate.push(['deselect', min, i])\r\n        let temp = secondaryArray[min]\r\n        secondaryArray[min] = secondaryArray[i]\r\n        secondaryArray[i] = temp\r\n    }\r\n}","import React from 'react';\nimport SortingVisualiser from \"./Components/SortingVisualiser/SortingVisualiser.jsx\"\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n      <SortingVisualiser/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}